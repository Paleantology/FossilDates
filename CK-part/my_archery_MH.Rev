n = 10
mu_true = 1
arrow_mean = rgamma(1, n, n/mu_true)[1]
alpha = 1.0
mu = rexp(1, alpha)[1]

function likelihood(mu){
	if(mu < 0.0)
		return 0.0
	return dgamma(arrow_mean, n, n/mu, log=false)
}

function prior(mu){
	if(mu < 0.0)
		return 0.0
	return dexp(mu, alpha, log=false
}

write("iteration","mu","\n",file="archery_MH.log")
write(0,mu,"\n",file="archery_MH.log",append=TRUE)
print("iteration", "mu")
print(0, mu)

printgen = 10
reps = 10000
delta = 1 
for(rep in 1:reps){
mu_prime <- mu + runif(n=1, -delta, delta)[1]
R = ( likelihood(mu_prime)/likelihood(mu) ) * ( prior(mu_prime)/prior(mu) )
if(u < R){
	mu = mu_prime
}
if ( (rep % printgen) == 0 ) {
	write(rep,mu,"\n",file="archery_MH.log",append=TRUE)
	print(rep, mu)
}
}
